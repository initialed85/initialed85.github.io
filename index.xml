<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>initialed85's misc tech stuff</title><link>https://initialed85.cc/</link><description>Recent content on initialed85's misc tech stuff</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Wed, 05 Oct 2022 21:11:33 +0800</lastBuildDate><atom:link href="https://initialed85.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>Permacomputing</title><link>https://initialed85.cc/posts/permacomputing/</link><pubDate>Wed, 05 Oct 2022 21:11:33 +0800</pubDate><guid>https://initialed85.cc/posts/permacomputing/</guid><description>I stumbled across an article on lobste.rs that spoke about permacomputing which interested me initially because I&amp;rsquo;d never heard of it.
As the website suggests the principles are a good place to start.
In particular the lifespan maximization approach resonated with me, here&amp;rsquo;s an excerpt:
Lifespan maximization is the extension of hardware lifespan by the users. It may be supported by planned longevity from the manufacturer&amp;rsquo;s side, but it rarely is.</description></item><item><title>How to write code like a Dinosaur</title><link>https://initialed85.cc/posts/how-to-write-code-like-a-dinosaur/</link><pubDate>Sun, 18 Sep 2022 12:43:02 +0800</pubDate><guid>https://initialed85.cc/posts/how-to-write-code-like-a-dinosaur/</guid><description>I&amp;rsquo;ve been working on a personal project called Dinosaur; it&amp;rsquo;s a single-page application that presents the user with two horizontal panes- a code editor in the language of your choice and a live feed to your code being executed.
Languages presently supported are:
C Go Java Lua Python Rust TypeScript Initially this sounds a bit like any of the various coding games / exercises out there but I&amp;rsquo;ve chosen to add what I think is a slight variation in that all user sessions have network stack access to the same network as all other user sessions (in time I&amp;rsquo;ll probably permit this to be broken up into groups, permitting isolated group sessions).</description></item><item><title>Troubleshooting a mysterious Python test failure</title><link>https://initialed85.cc/posts/first-post/</link><pubDate>Tue, 13 Sep 2022 20:31:01 +0800</pubDate><guid>https://initialed85.cc/posts/first-post/</guid><description>At my day job my colleagues and I develop a data gathering and visualisation platform that has a fair bit of Python behind the scenes.
We test a lot of this Python using pytest and all our tests are run by a large locally hosted instance of TeamCity.
A test run involves TeamCity executing a bash script responsible for setting up any test dependencies (usually Docker containers) and then executing the test itself (also usually a Docker container).</description></item></channel></rss>